function createPrimBlobObject(parsedBlob, timestamp, version, versionFA100) {
    var blobObject = {};
    var division23 = [6, 1];
    var dividedByte23 = divideByte(division23, parsedBlob[23]);
    var division24 = [5, 2];
    var dividedByte24 = divideByte(division24, parsedBlob[24]);
    var division25 = [5, 2];
    var dividedByte25 = divideByte(division25, parsedBlob[25]);
    var division26 = [5, 2];
    var dividedByte26 = divideByte(division26, parsedBlob[26]);
    var division27 = [5, 2];
    var dividedByte27 = divideByte(division27, parsedBlob[27]);
    var division28 = [5, 2];
    var dividedByte28 = divideByte(division28, parsedBlob[28]);
    var division29 = [4, 3];
    var dividedByte29 = divideByte(division29, parsedBlob[29]);
    var division30 = [4, 3];
    var dividedByte30 = divideByte(division30, parsedBlob[30]);
    var division31 = [4, 3];
    var dividedByte31 = divideByte(division31, parsedBlob[31]);
    var division32 = [4, 3];
    var dividedByte32 = divideByte(division32, parsedBlob[32]);
    var division33 = [4, 3];
    var dividedByte33 = divideByte(division33, parsedBlob[33]);
    var division34 = [4, 1, 1, 1];
    var dividedByte34 = divideByte(division34, parsedBlob[34]);
    var division35 = [5, 1, 1];
    var dividedByte35 = divideByte(division35, parsedBlob[35]);
    var division36 = [5, 1, 1];
    var dividedByte36 = divideByte(division36, parsedBlob[36]);
    var division37 = [5, 1, 1];
    var dividedByte37 = divideByte(division37, parsedBlob[37]);
    var division38 = [4, 1, 1, 1];
    var dividedByte38 = divideByte(division38, parsedBlob[38]);
    var division39 = [5, 2];
    var dividedByte39 = divideByte(division39, parsedBlob[39]);
    var division40 = [4, 2, 1];
    var dividedByte40 = divideByte(division40, parsedBlob[40]);
    var uDeicing = dividedByte23[1];
    var uErrorFileNr = dividedByte23[0];
    var uErrorState = dividedByte24[0];
    var uDefrostExhaust = dividedByte24[1];
    var uVentPosSupply = dividedByte25[0];
    var uCtrlSetSupVent = dividedByte25[1];
    var uVentPosExtract = dividedByte26[0];
    var uCtrlSetExtVent = dividedByte26[1];
    var uVentPosBath = dividedByte27[0];
    var uCtrlSet2ndVent = dividedByte27[1];
    var uVentPosBypass = dividedByte28[0];
    var uCtrlSetBypVent = dividedByte28[1];
    var uTempSupplyHigh = dividedByte29[0];
    var uComfortLevel = dividedByte29[1];
    var uTempExtractHigh = dividedByte30[0];
    var uState = dividedByte30[1];
    var uTempExhaustHigh = dividedByte31[0];
    var uControlAuto = dividedByte31[1];
    var uTempOutdoorHigh = dividedByte32[0];
    var uDummy1 = dividedByte32[1];
    var uTempVirtSupExitHigh = dividedByte33[0];
    var uDummy2 = dividedByte33[1];
    var uPressure4LSB = dividedByte34[0];
    var uCFAHigh = dividedByte34[1];
    var uFilterSupplyFul = dividedByte34[2];
    var uFilterExtractFul = dividedByte34[3];
    var uAirFlowAve = dividedByte35[0];
    var u2ndRoomOnly20 = dividedByte35[1];
    var uFanLim2ndRoom = dividedByte35[2];
    var uFanExtractRPMHigh = dividedByte36[0];
    var uCO2High = dividedByte36[1];
    var uDIPSwitchHigh = dividedByte36[2];
    var uFanSupplyRPMHigh = dividedByte37[0];
    var uHumRedMode = dividedByte37[1];
    var uSumCooling = dividedByte37[2];
    var uFanSpeed = dividedByte38[0];
    var uFSCHigh = dividedByte38[1];
    var uFECHigh = dividedByte38[2];
    var uCSUHigh = dividedByte38[3];
    var uPressure5MSB = dividedByte39[0];
    var uErrorLineNrSuperHigh = dividedByte39[1];
    var uOperatingHoursSuperHigh = dividedByte40[0];
    var uFilterHoursSuperHigh = dividedByte40[1];
    var uErrorCodeHigh = dividedByte40[2];
    var uTempSupplyLow = parsedBlob[2];
    var uTempOutdoorLow = parsedBlob[3];
    var uTempExhaustLow = parsedBlob[4];
    var uTempExtractLow = parsedBlob[5];
    var uTempVirtSupExitLow = parsedBlob[6];
    var uFanExtractRPMLow = parsedBlob[7];
    var uDIPSwitchLow = parsedBlob[8];
    var uFanSupplyRPMLow = parsedBlob[9];
    var uErrorLineNrHigh = parsedBlob[10];
    var uErrorLineNrLow = parsedBlob[11];
    var uErrorCodeLow = parsedBlob[12];
    var uCO2Low = parsedBlob[13];
    var uOperatingHoursLow = parsedBlob[14];
    var uOperatingHoursHigh = parsedBlob[15];
    var uFilterHoursLow = parsedBlob[16];
    var uFilterHoursHigh = parsedBlob[17];
    var uFSCLow = parsedBlob[18];
    var uFECLow = parsedBlob[19];
    var uCSULow = parsedBlob[20];
    var uCFALow = parsedBlob[21];
    var uRSSILow = parsedBlob[47];
    if (timestamp != null)
        blobObject["timestamp"] = timestamp;
    if (version != null)
        blobObject["version"] = version.replace("x", ".");
    if (versionFA100 != null)
        blobObject["versionFA100"] = versionFA100.replace("x", ".");
    blobObject["HumOutdoor"] = parsedBlob[0];
    blobObject["HumExtract"] = parsedBlob[1];
    var iTempSupply = lowPlusHigh(uTempSupplyLow, uTempSupplyHigh);
    blobObject["TempSupply"] = toSigned(iTempSupply, 11) / 8;
    var iTempOutdoor = lowPlusHigh(uTempOutdoorLow, uTempOutdoorHigh);
    blobObject["TempOutdoor"] = toSigned(iTempOutdoor, 11) / 8;
    var iTempExhaust = lowPlusHigh(uTempExhaustLow, uTempExhaustHigh);
    blobObject["TempExhaust"] = toSigned(iTempExhaust, 11) / 8;
    var iTempExtract = lowPlusHigh(uTempExtractLow, uTempExtractHigh);
    blobObject["TempExtract"] = toSigned(iTempExtract, 11) / 8;
    var iTempVirtSupExit = lowPlusHigh(uTempVirtSupExitLow, uTempVirtSupExitHigh);
    blobObject["TempVirtSupExit"] = toSigned(iTempVirtSupExit, 11) / 8;
    blobObject["CO2"] = lowPlusHigh(uCO2Low, uCO2High) * 16;
    blobObject["Pressure"] = getPressure(uPressure5MSB, uPressure4LSB);
    blobObject["ComfortLevel"] = getNumberFrBits(uComfortLevel) + 1;
    blobObject["State"] = getNumberFrBits(uState);
    blobObject["HumRedMode"] = getNumberFrBits(uHumRedMode);
    blobObject["FanLim2ndRoom"] = getNumberFrBits(uFanLim2ndRoom);
    blobObject["b2ndRoomOnly20"] = getNumberFrBits(u2ndRoomOnly20);
    blobObject["bSumCooling"] = getNumberFrBits(uSumCooling);
    blobObject["ErrorState"] = getNumberFrBits(uErrorState);
    blobObject["FanSpeed"] = getNumberFrBits(uFanSpeed);
    blobObject["FanSupplyRPM"] = lowPlusHigh(uFanSupplyRPMLow, uFanSupplyRPMHigh);
    blobObject["FanExtractRPM"] = lowPlusHigh(uFanExtractRPMLow, uFanExtractRPMHigh);
    blobObject["AirFlowAve"] = getNumberFrBits(uAirFlowAve);
    blobObject["FilterSupplyFul"] = getNumberFrBits(uFilterSupplyFul);
    blobObject["FilterExtractFul"] = getNumberFrBits(uFilterExtractFul);
    blobObject["VentPosExtract"] = getNumberFrBits(uVentPosExtract);
    blobObject["VentPosBath"] = getNumberFrBits(uVentPosBath);
    blobObject["VentPosSupply"] = getNumberFrBits(uVentPosSupply);
    blobObject["VentPosBypass"] = getNumberFrBits(uVentPosBypass);
    blobObject["ControlAuto"] = getNumberFrBits(uControlAuto);
    blobObject["DIPSwitch"] = lowPlusHigh(uDIPSwitchLow, uDIPSwitchHigh);
    blobObject["DefrostExhaust"] = getNumberFrBits(uDefrostExhaust);
    blobObject["CtrlSetSupVent"] = getNumberFrBits(uCtrlSetSupVent);
    blobObject["CtrlSetExtVent"] = getNumberFrBits(uCtrlSetExtVent);
    blobObject["CtrlSet2ndVent"] = getNumberFrBits(uCtrlSet2ndVent);
    blobObject["CtrlSetBypVent"] = getNumberFrBits(uCtrlSetBypVent);
    blobObject["ErrorFileNr"] = getNumberFrBits(uErrorFileNr);
    blobObject["ErrorLineNr"] = lowPlusHigh(uErrorLineNrLow, uErrorLineNrHigh);
    blobObject["ErrorCode"] = lowPlusHigh(uErrorCodeLow, uErrorCodeHigh);
    blobObject["filter_hours"] = lowPlusHigh(uFilterHoursLow, uFilterHoursHigh, uFilterHoursSuperHigh);
    blobObject["operating_hours"] = lowPlusHigh(uOperatingHoursLow, uOperatingHoursHigh, uOperatingHoursSuperHigh);
    blobObject["board_version"] = parsedBlob[22];
    blobObject["bDeicing"] = getNumberFrBits(uDeicing);
    blobObject["FSC"] = lowPlusHigh(uFSCLow, uFSCHigh);
    blobObject["FEC"] = lowPlusHigh(uFECLow, uFECHigh);
    blobObject["CSU"] = lowPlusHigh(uCSULow, uCSUHigh);
    blobObject["CFA"] = lowPlusHigh(uCFALow, uCFAHigh);
    blobObject["RoomArea"] = parseDIP(blobObject["DIPSwitch"], 0);
    blobObject["SecondRoomFlow"] = parseDIP(blobObject["DIPSwitch"], 1);
    var absHumOutdoor = getAbsHum(blobObject["HumOutdoor"], roundVal(blobObject["TempOutdoor"]));
    var absHumExtract = getAbsHum(blobObject["HumExtract"], roundVal(blobObject["TempExtract"]));
    var airDensity = getAirDensity(blobObject["Pressure"], blobObject["TempExtract"]);
    blobObject["absHumExtract"] = absHumExtract;
    blobObject["absHumOutdoor"] = absHumOutdoor;
    blobObject["airDensity"] = airDensity;
    blobObject["RSSI"] = toSigned(uRSSILow, 8);
    blobObject["S1"] = parsedBlob[41];
    blobObject["S2"] = parsedBlob[42];
    blobObject["S3"] = parsedBlob[43];
    blobObject["S4"] = parsedBlob[44];
    blobObject["S5"] = parsedBlob[45];
    blobObject["S6"] = parsedBlob[46];
    if (blobObject["FanSpeed"] > 2) {
        blobObject["AirFlow"] = blobObject["FanSpeed"] * 10
    } else {
        blobObject["AirFlow"] = blobObject["AirFlowAve"]
    }
    return blobObject
}
